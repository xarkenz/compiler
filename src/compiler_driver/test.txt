// function printf(*[u8], ...) -> u32;

let global_1: i32 = 100;
let global_2: i32;

function fibonacci(limit: i32) -> i32 {
    let a: i32 = 0;
    let b: i32 = 1;

    while (b < limit) {
        let temp: i32 = a + b;
        a = b;
        b = temp;
    }

    return a;
}

function gcd(a: u32, b: u32) -> u32 {
    while (b >= 1) {
        let temp: u32 = a % b;
        a = b;
        b = temp;
    }

    return a;
}

function do_some_pointing() {
    let a: i32;
    let b: i32;
    let c: i32;
    a = b = c = 3;
    print a;
    print b;
    print c;

    let x: i32 = 0;
    print x;
    let y: *i32 = &x;
    *y = 1;
    print x;
    let z: **i32 = &y;
    **z = 2;
    print x;
}

function main() -> i32 {
    // print fibonacci(1000);
    // print gcd(18, 45);

    print global_1;
    print global_2;

    do_some_pointing();

    return 0;
}
