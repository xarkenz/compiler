module merge {
    // namespace ::module {merge: module}

    module first {
        // namespace ::merge {first: module}

        import target::MyType::my_method;
        // namespace ::merge::first {target: undef, my_method: alias(::merge::first::target::MyType::my_method)}
        // namespace ::merge::first::target {MyType: undef}
        // namespace ::merge::first::target::MyType {my_method: undef}

        struct First {
            member: target::MyType,
            // type $0: undef
            // namespace ::merge::first::target {MyType: undeftype($0)}
        }
        // type $1: struct First {member: $0}
        // namespace ::merge::first {target: undef, my_method: alias(..), First: type($1)}

        import super::target;
        // namespace ::merge {first: module, target: undef}
        // namespace ::merge::first {target: alias(::merge::target), my_method: alias(..), First: type($1)}
        // ...copy namespace ::merge::first::target to ::merge::target, maybe?
    }

    module second {
        // namespace ::merge {first: module, target: undef, second: module}

        import target::MyType::my_method;
        // namespace ::merge::second {target: undef, my_method: alias(::merge::second::target::MyType::my_method)}
        // namespace ::merge::second::target {MyType: undef}
        // namespace ::merge::second::target::MyType {my_method: undef}

        struct Second {
            member: target::MyType,
            // type $2: undef
            // namespace ::merge::second::target {MyType: undeftype($2)}
        }
        // type $3: struct Second {member: $2}
        // namespace ::merge::second {target: undef, Second: type($3)}

        import super::target;
        // namespace ::merge::second {target: alias(::merge::target), Second: type($3)}
        // ...uh oh! namespace ::merge::target already has stuff, so we can't simply copy
        // ...this is a case where a merge would probably be needed
    }

    module target {
        struct MyType {}

        implement MyType {
            function my_method() {}
        }
    }
}
